---
- hosts: localhost  # put localhost.  We are processing against aws
  connection: local  # put local.  We are processing against aws
  gather_facts: False  # don't gather facts against localhost
  tasks:
  - name: create a new ec2 VPC
    ec2_vpc_net:
      name: "{{ vpc_name }}1" 
      cidr_block: "{{ vpc_cidr }}"
      region: "{{ region }}"
      # enable dns support 
      dns_support: yes
      # enable dns hostnames
      dns_hostnames: yes
      tenancy: default
      state: "{{ state }}"
    register: vpc
    
  - name: Set VPC ID in variable
    set_stats:
      data:
        vpc_id1: "{{ vpc.vpc.id }}"
  
  - name: associate subnet to the VPC
    ec2_vpc_subnet:
      region: "{{ region }}"
      vpc_id: "{{ vpc.vpc.id }}"
      state: "{{ state }}"
      cidr: "{{ subnet_cidr }}"
      map_public: yes
      resource_tags:
        Name: "{{ subnet_name }}"
        
  - name: create IGW
    ec2_vpc_igw:
      vpc_id: "{{ vpc.vpc.id }}"
     region: "{{ region }}"
     tags:
       Name: "igw-{{ vpc_name }}1"
    register: igw        
    
  - name: Lookup route tables
    ec2_vpc_route_table_info:
      region: "{{ region }}"
      filters:
        vpc-id: "{{ vpc.vpc.id }}"
    register: vpc_route_tables

  - name: Setup route tables
    ec2_vpc_route_table:
      region: "{{ region }}"
      vpc_id: "{{ vpc.vpc.id }}"
      lookup: id
      purge_subnets: false
      route_table_id: "{{ vpc_route_tables.route_tables[0].id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
 
  - name: Create Security Group
    ec2_group:
      name: Web DMZ
      description: DMZ Security Group
      vpc_id: "{{ vpc.vpc.id }}"
      region: "{{ region }}"
      rules:
        - proto: tcp
          ports:
            - 80
            cidr_ip: 0.0.0.0/0
        - proto: tcp
          ports:
            - 22
            cidr_ip: 0.0.0.0/0
    register: security_group
    
  - name: Get AMI Image ID for HoneyPot
    ec2_ami_info:
      region: "{{ region }}"
      filters:
        name: "Debian 10 (Buster) LAMP Stack - Linux Apache MySQL/MariaDB PHP 7.2-9*"
    register: amis_hp

  - name:  print Mgmt ami id
    vars:
      hp_ami: >
        {{ amis_hp.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}
    debug:
      msg: "{{hp_ami.image_id}}"
    register: amiID
    
  - name: launche honeyPot
    ec2:
      region: "{{ region }}"
      image: "{{ amiID.msg }}"
      instance_type: "t2.micro"
      private_ip: "10.1.1.10"
      wait: no
      group_id: "{{ security_group_hp.group_id }}"
      vpc_subnet_id: "{{ subnet3.subnet.id }}"
      key_name: "{{ keypairName  }}"
      assign_public_ip: false
      instance_tags: 
        Name: HoneyPotEC2      
    register: HPInstance 
    
